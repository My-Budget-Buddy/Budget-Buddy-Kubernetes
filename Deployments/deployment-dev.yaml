# DNS: <service-name>.dev.svc.cluster.local
apiVersion: apps/v1
kind: Deployment
metadata:
  name: development
  namespace: dev
spec:
  replicas: 3
  selector:
    matchLabels:
      app: development
  template:
    metadata:
      labels:
        app: development
    spec:
      containers:
      # Account Services
      - name: account-services          # TODO: CREATE DEV CONTAINERS IN ECR
        image: account-services:latest  # TODO: REWRITE TO MATCH AWS DEV CONTAINERS
        ports:
        - containerPort: 8080

      # Auth Services
      - name: auth-services
        image: auth-services:latest
        ports:
        - containerPort: 8888

      # Budget Services
      - name: budget-services
        image: budget-services:latest
        ports:
        - containerPort: 8082

      # Credit Score Service
      - name: credit-score-service
        image: credit-score-service:latest
        ports:
        - containerPort: 8085

      # Discovery Service
      - name: discovery-service
        image: discovery-service:latest
        ports:
        - containerPort: 8761

      # Gateway Service
      - name: gateway-service
        image: gateway-service:latest
        ports:
        - containerPort: 8125

      # Tax Service
      - name: tax-service
        image: tax-service:latest
        ports:
        - containerPort: 8084

      # Transaction Service
      - name: transaction-service
        image: transaction-service:latest
        ports:
        - containerPort: 8083
                  
      # User Service
      - name: user-service
        image: user-service:latest
        ports:
        - containerPort: 8081

      # Database
      - name: postgres
        image: postgres:13
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: md5
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: postgres-initdb
              mountPath: /docker-entrypoint-initdb.d
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
      volumes:
        - name: postgres-initdb
          configMap:
            name: initdb-configmap
        - name: postgres-data
          emptyDir: {}
    env:
    - name: DATABASE_URL
      value: jdbc:postgresql://db:5432/my_budget_buddy    # Possibly needs to be some sort of "dev-postgres.dev.svc.cluster.local"
    - name: DATABASE_USER
      valueFrom:
        secretKeyRef:
          name: postgres-secret
          key: POSTGRES_USER
    - name: DATABASE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgres-secret
          key: POSTGRES_PASSWORD